services:
    datafed-web:
        depends_on: ["datafed-core"]
        environment:
            DATAFED_GLOBUS_APP_SECRET: "${DATAFED_GLOBUS_APP_SECRET}"
            DATAFED_GLOBUS_APP_ID: "${DATAFED_GLOBUS_APP_ID}"
            DATAFED_ZEROMQ_SESSION_SECRET: "${DATAFED_ZEROMQ_SESSION_SECRET}"
            DATAFED_DOMAIN: "${DATAFED_DOMAIN}"
            DATAFED_HTTPS_SERVER_PORT: "${DATAFED_HTTPS_SERVER_PORT}"
            DATAFED_WEB_CERT_PATH: "/opt/datafed/keys/cert.crt"
            DATAFED_WEB_KEY_PATH: "/opt/datafed/keys/cert.key"
            DATAFED_WEB_USER: "datafed"
            DATAFED_DEFAULT_LOG_PATH: "${DATAFED_CONTAINER_LOG_PATH}"
            DATAFED_CORE_ADDRESS_PORT_INTERNAL: "datafed-core:7513"
            UID: "${DATAFED_UID}"
        image: datafed-web:latest
        ports:
            - 443:443 # This must be the same port that is mapped to the host for redirects to work
        volumes:
            - ./keys:/opt/datafed/keys
            - ./logs:${DATAFED_CONTAINER_LOG_PATH}
        networks:
            - datafed-internal

    datafed-core:
        image: datafed-core:latest
        depends_on:
            datafed-foxx:
                condition: service_healthy
        environment:
            DATAFED_GLOBUS_APP_SECRET: "${DATAFED_GLOBUS_APP_SECRET}"
            DATAFED_GLOBUS_APP_ID: "${DATAFED_GLOBUS_APP_ID}"
            DATAFED_ZEROMQ_SESSION_SECRET: "${DATAFED_ZEROMQ_SESSION_SECRET}"
            DATAFED_DOMAIN: "${DATAFED_DOMAIN}"
            DATAFED_WEB_CERT_PATH: "/opt/datafed/keys/cert.crt"
            DATAFED_WEB_KEY_PATH: "/opt/datafed/keys/cert.key"
            DATAFED_DEFAULT_LOG_PATH: "${DATAFED_CONTAINER_LOG_PATH}"
            DATAFED_DATABASE_PASSWORD: "${DATAFED_DATABASE_PASSWORD}"
            DATAFED_DATABASE_IP_ADDRESS: "${DATAFED_DATABASE_IP_ADDRESS}"
            DATAFED_DATABASE_IP_ADDRESS_PORT: "${DATAFED_DATABASE_IP_ADDRESS}:${DATAFED_DATABASE_PORT}"
            DATAFED_CORE_LOG_LEVEL: "${DATAFED_CORE_LOG_LEVEL}"
        user: "${DATAFED_UID}:0"
        security_opt:
            - no-new-privileges:true
        ports:
            - 7513 # Communication web server
            - 7512:7512 # Secure core server communication must be exposed outside of the container
        volumes:
            - ./keys:/opt/datafed/keys
            - ./logs:${DATAFED_CONTAINER_LOG_PATH}
        networks:
            - datafed-internal

    datafed-foxx:
        image: datafed-foxx:latest
        depends_on: ["arango"]
        environment:
            DATAFED_DOMAIN: "${DATAFED_DOMAIN}"
            DATAFED_DEFAULT_LOG_PATH: "${DATAFED_CONTAINER_LOG_PATH}"
            DATAFED_DATABASE_PASSWORD: "${DATAFED_DATABASE_PASSWORD}"
            DATAFED_DATABASE_IP_ADDRESS: "${DATAFED_DATABASE_IP_ADDRESS}"
            DATAFED_DATABASE_HOST: "arango"
            # NOTE enabling foxx tests will cause state changes in the database
            # do not run this unless you are ok with the database being wiped.
            ENABLE_FOXX_TESTS: "${DATAFED_ENABLE_FOXX_TESTS}"
            SSL_CERT_FILE: "/usr/local/share/ca-certificates/datafed-arango.crt"
        user: "${DATAFED_UID}:0"
        security_opt:
            - no-new-privileges:true
        healthcheck:
            test: ["CMD", "/bin/bash", "-c", "[ -f /tmp/.foxx_is_installed ]"]
            interval: 10s
            timeout: 5s
            retries: 20
        volumes:
            - foxx_tmp:/tmp
            - ./keys/:/usr/local/share/ca-certificates/
        networks:
            - datafed-internal

    arango:
        image: arangodb/arangodb:3.12.4
        environment:
            ARANGO_ROOT_PASSWORD: "${DATAFED_DATABASE_PASSWORD}"
        volumes:
            - arango_db:/var/lib/arangodb3
            - ./keys/:/usr/local/share/ca-certificates/
        ports:
            - 8529:8529 # Arangodb web UI
        networks:
            - datafed-internal
        entrypoint: >
         sh -c 'if [ -f /usr/local/share/ca-certificates/datafed-arango.pem ]; then
           exec /entrypoint.sh --ssl.keyfile /usr/local/share/ca-certificates/datafed-arango.pem \
                        --server.endpoint ssl://0.0.0.0:8529;
         else
           exec /entrypoint.sh --server.endpoint tcp://0.0.0.0:8529;
         fi'

# Fox tmp is used so that if docker compose up is run a second time it won't
# need to overwrite the database it will simply use the existing one hence
# skipping some of the setup steps. The foxx entrypoint script will create
# a file in tmp to indicate that this is the case.
#
# arango_db is used to cache the state of the arangodb database
volumes:
    foxx_tmp:
    arango_db:

networks:
    datafed-internal:
        driver: bridge

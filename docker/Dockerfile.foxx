# NOTE this image must be built with respect to the base of the project i.e.
# cd ${PROJECT_ROOT} or cd DataFed
# docker build -f core/docker/Dockerfile .

ARG                        BUILD_BASE="ubuntu:focal"
ARG                      DEPENDENCIES="dependencies"
ARG                           RUNTIME="runtime"
ARG                       DATAFED_DIR="/datafed"
ARG              DATAFED_INSTALL_PATH="/opt/datafed"
ARG DATAFED_DEPENDENCIES_INSTALL_PATH="/opt/datafed/dependencies"
ARG                         GCS_IMAGE="code.ornl.gov:4567/dlsw/datafed/gcs-ubuntu-focal"
ARG                         BUILD_DIR="$DATAFED_DIR/source"
ARG                           NVM_DIR="$DATAFED_DIR/.nvm"
ARG                           NVM_INC="$DATAFED_DIR/.nvm/versions/node/v13.14.0/include/node"
ARG                           NVM_BIN="$DATAFED_DIR/.nvm/versions/node/v13.14.0/bin"
ARG                           LIB_DIR="/usr/local/lib"

FROM ${DEPENDENCIES} AS foxx-build

ARG DATAFED_DIR
ARG BUILD_DIR
ARG DATAFED_INSTALL_PATH
ARG DATAFED_DEPENDENCIES_INSTALL_PATH

# WARNING
#
# Do not overwrite PATH here, overwriting PATH could lead to inconsistencies in
# your build. Docker will automatically pull from the host env if declared here.
# If PATH is different on the host you could create a broken container.

ENV                         BUILD_DIR="${BUILD_DIR}"
ENV                       DATAFED_DIR="${DATAFED_DIR}"
ENV DATAFED_DEPENDENCIES_INSTALL_PATH="${DATAFED_DEPENDENCIES_INSTALL_PATH}"
ENV              DATAFED_INSTALL_PATH="$DATAFED_INSTALL_PATH"
ENV          DATAFED_DEFAULT_LOG_PATH="$DATAFED_INSTALL_PATH/logs"
# Set to false by default to avoid wiping the database
ENV                 ENABLE_FOXX_TESTS="FALSE"

COPY ./core/CMakeLists.txt             ${BUILD_DIR}/core/CMakeLists.txt
COPY ./CMakeLists.txt                  ${BUILD_DIR}
COPY ./scripts/dependency_versions.sh  ${BUILD_DIR}/scripts/
COPY ./scripts/generate_datafed.sh     ${BUILD_DIR}/scripts/
COPY ./cmake                           ${BUILD_DIR}/cmake
COPY ./docker/entrypoint_foxx.sh       ${BUILD_DIR}/docker/entrypoint_foxx.sh
COPY ./core/database                   ${BUILD_DIR}/core/database
COPY ./scripts/install_foxx.sh         ${BUILD_DIR}/scripts/

# Create datafed user, prefer more secure login options than password
# Recommended to mount ssh public key on run
RUN adduser --disabled-password --gecos "" datafed

RUN mkdir -p ${DATAFED_DIR}
RUN mkdir -p ${DATAFED_INSTALL_PATH}
RUN mkdir -p ${DATAFED_DEFAULT_LOG_PATH}

RUN curl -OL https://download.arangodb.com/arangodb312/DEBIAN/Release.key; apt-key add - < Release.key

# RUN echo 'deb https://download.arangodb.com/arangodb311/DEBIAN/ /' | tee /etc/apt/sources.list.d/arangodb.list
# If trust the site but the gpg key has expired can add [trusted=yes]
# i.e.
RUN echo 'deb [trusted=yes] https://download.arangodb.com/arangodb312/DEBIAN/ /' | tee /etc/apt/sources.list.d/arangodb.list
RUN apt update
RUN apt install arangodb3-client -y
RUN arangosh --version

USER root

WORKDIR ${BUILD_DIR}

ENTRYPOINT /datafed/source/docker/entrypoint_foxx.sh

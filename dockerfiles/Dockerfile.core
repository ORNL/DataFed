ARG DATAFED_SRC_DIR="/opt/datafed/source"
ARG DATAFED_BIN_DIR="/opt/datafed/bin"
ARG DATAFED_CONFIG_DIR="/opt/datafed/config"

FROM fedora:34 as build

ARG DATAFED_SRC_DIR

# Install dependencies

RUN yum update -y
RUN yum install -y \
    g++ \
    cmake \
    wget \
    openssl-devel \
    protobuf \
    protobuf-devel \
    boost \
    boost-devel \
    libcurl \
    libcurl-devel \
    zeromq \
    zeromq-devel \
    globus-common-devel

# get, build, & install nlohmann/json

RUN wget https://github.com/nlohmann/json/archive/refs/tags/v3.9.1.tar.gz
RUN tar xvf v3.9.1.tar.gz
RUN cd json-3.9.1 \
    && mkdir build \
    && cd build \
    && cmake -DBUILD_TESTING=OFF .. \
    && make \
    && make install

# get, build, & install pboettch/json-schema-validator

RUN wget https://github.com/pboettch/json-schema-validator/archive/refs/tags/2.1.0.tar.gz
RUN tar xvf 2.1.0.tar.gz
RUN cd json-schema-validator-2.1.0 \
    && mkdir build \
    && cd build \
    && cmake .. \
    && make \
    && make install

# Build DataFed from source

RUN mkdir -p ${DATAFED_SRC_DIR}

COPY CMakeLists.txt ${DATAFED_SRC_DIR}
COPY common ${DATAFED_SRC_DIR}/common
COPY core ${DATAFED_SRC_DIR}/core
COPY repository ${DATAFED_SRC_DIR}/repository
COPY python ${DATAFED_SRC_DIR}/python
COPY web ${DATAFED_SRC_DIR}/web
COPY doc_source ${DATAFED_SRC_DIR}/doc_source

WORKDIR ${DATAFED_SRC_DIR}

RUN mkdir build \
    && cd build \
    && cmake .. \
    && make

# Build Core image

FROM fedora:34

ARG DATAFED_SRC_DIR
ARG DATAFED_BIN_DIR
ARG DATAFED_CONFIG_DIR

RUN mkdir -p ${DATAFED_BIN_DIR}

COPY --from=build ${DATAFED_SRC_DIR}/build/core/server/datafed-core ${DATAFED_BIN_DIR}

WORKDIR ${DATAFED_BIN_DIR}

RUN yum update -y
RUN yum install -y \
    protobuf \
    boost \
    libcurl \
    zeromq

ENV DATAFED_CONFIG_DIR ${DATAFED_CONFIG_DIR}

CMD ./datafed-core --cfg ${DATAFED_CONFIG_DIR}/datafed-core.cfg


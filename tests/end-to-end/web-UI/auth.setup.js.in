const { chromium } = require('playwright');
const path = require('path');
const process = require('process');

console.log("INFO - ******Inside Setup file******");

module.exports = async function () {
    // if a playwright page object doesn't exist, create one
    const browser = await chromium.launch({
        args: ['--ignore-certificate-errors'],
        headless: true,
    });

    const page = await browser.newPage();  
    console.log("INFO - new page object created");
   
    // Extra safety for debugging slow loads
    page.on('console', msg => console.log('INFO - [PAGE LOG] ', msg.text()));
    page.on('response', res => {
        if (res.status() >= 400)
            console.log(`ERROR - [HTTP ${res.status()}] ${res.url()}`);
    });

    // --- Step 1: Go to DataFed ---
    console.log("INFO - 1. Got to DataFed");
    await page.goto('https://@DATAFED_DOMAIN@/ui/welcome', { waitUntil: 'networkidle', timeout: 60000 });

    // --- Step 2: Click Login/Register ---
    console.log("INFO - 2. Login and Register");
    const loginButton = page.getByRole('button', { name: 'Log In / Register' });
    await loginButton.waitFor({ state: 'visible', timeout: 30000 });
    await loginButton.click();

    // --- Step 3: Check if link is visible ---
    console.log("INFO - 3. Check if link is visible");
    const globusLink = page.getByRole('link', { name: /Globus/i });
    await globusLink.waitFor({ state: 'visible', timeout: 30000 });

    // --- Step 4: Click Globus ID to sign in ---
    console.log("INFO - 4. Use Globus ID to sign in");
    const globusIDButton = page.getByRole('button', { name: 'Globus ID to sign in' });
    await globusIDButton.waitFor({ state: 'visible', timeout: 30000 });
    await globusIDButton.click();

    // --- Step 5: Wait for Globus redirect ---
    console.log("INFO - 5. Wait for Globus login to redirect");
    await page.waitForLoadState('networkidle', { timeout: 45000 });

    // --- Step 6: Fill in credentials robustly ---
    console.log("INFO - 5. Fill in credentials");
    const usernameField = page.getByLabel(/username/i);
    await usernameField.waitFor({ state: 'visible', timeout: 45000 });
    await usernameField.fill(process.env.DATAFED_WEB_TEST_USERNAME);

    const passwordField = page.getByLabel(/password/i);
    await passwordField.waitFor({ state: 'visible', timeout: 45000 });
    await passwordField.fill(process.env.DATAFED_WEB_TEST_PASSWORD);

    // --- Step 7: Submit form ---
    await page.click('button[type="submit"]');
    await page.waitForURL('https://@DATAFED_DOMAIN@/ui/main')

    console.log("INFO - ******PAST LOGIN******");
    await page.context().storageState({ path: './.auth/auth.json'}); //TESTING
    console.log("INFO - ******Done with login******");

    await browser.close();
};

